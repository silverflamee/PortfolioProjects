<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (TableauBook4)' inline='true' name='federated.0jp32gj10eviy71awdwjq01xdsk3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauBook4' name='excel-direct.1hdbplk1ulxgpl15k7u4q15b5cod'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/amail/Desktop/Data Analytics/TableauBook4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1hdbplk1ulxgpl15k7u4q15b5cod' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1hdbplk1ulxgpl15k7u4q15b5cod' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F71AB7C537D4A26B9B7098C92D731B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F71AB7C537D4A26B9B7098C92D731B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F71AB7C537D4A26B9B7098C92D731B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F71AB7C537D4A26B9B7098C92D731B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F71AB7C537D4A26B9B7098C92D731B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6F71AB7C537D4A26B9B7098C92D731B2]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Location,MONTH(Date))' hidden='true' name='[Action (Location,MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Location]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Niger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Palau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;European Union&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Macao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;South America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Niue&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;World&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Timor&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Mali&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Togo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;International&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6F71AB7C537D4A26B9B7098C92D731B2'>
            <properties context=''>
              <relation connection='excel-direct.1hdbplk1ulxgpl15k7u4q15b5cod' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TableauBook3)' inline='true' name='federated.1oy1wlq1wraut715wvlnx1x4m2c6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauBook3' name='excel-direct.1dhsfkr08qxgi51go7evl0c9340c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/amail/Desktop/Data Analytics/TableauBook3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1dhsfkr08qxgi51go7evl0c9340c' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D234:no:A1:D234:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1dhsfkr08qxgi51go7evl0c9340c' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D234:no:A1:D234:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D234:no:A1:D234:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_64125A34A01B48DEADFFE0AD51172957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_64125A34A01B48DEADFFE0AD51172957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_64125A34A01B48DEADFFE0AD51172957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_64125A34A01B48DEADFFE0AD51172957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_64125A34A01B48DEADFFE0AD51172957]' role='measure' type='quantitative' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Location]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_64125A34A01B48DEADFFE0AD51172957'>
            <properties context=''>
              <relation connection='excel-direct.1dhsfkr08qxgi51go7evl0c9340c' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D234:no:A1:D234:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TableauBook2)' inline='true' name='federated.0iyag7x0w0umyy16myqzs16e3h7w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauBook2' name='excel-direct.1tevczn0q4wi5m176hjru1806ov6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/amail/Desktop/Data Analytics/TableauBook2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1tevczn0q4wi5m176hjru1806ov6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1tevczn0q4wi5m176hjru1806ov6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_643565BD35DC4542BE1F9CA98886308C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_643565BD35DC4542BE1F9CA98886308C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_643565BD35DC4542BE1F9CA98886308C]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_643565BD35DC4542BE1F9CA98886308C'>
            <properties context=''>
              <relation connection='excel-direct.1tevczn0q4wi5m176hjru1806ov6' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TableauBook1)' inline='true' name='federated.1dhswj00hjvjpc1f897kl0zcesu5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauBook1' name='excel-direct.0tso6p50mls0x515z6oeq1jlxf4j'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/amail/Desktop/Data Analytics/TableauBook1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0tso6p50mls0x515z6oeq1jlxf4j' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0tso6p50mls0x515z6oeq1jlxf4j' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E11616CC8B3D4ADF8663C3D3AC2D1BE0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E11616CC8B3D4ADF8663C3D3AC2D1BE0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E11616CC8B3D4ADF8663C3D3AC2D1BE0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E11616CC8B3D4ADF8663C3D3AC2D1BE0]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_E11616CC8B3D4ADF8663C3D3AC2D1BE0'>
            <properties context=''>
              <relation connection='excel-direct.0tso6p50mls0x515z6oeq1jlxf4j' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_609A851F2C7045AEA2E5FAA1BA15E779]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Covid Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauBook1)' name='federated.1dhswj00hjvjpc1f897kl0zcesu5' />
          </datasources>
          <datasource-dependencies datasource='federated.1dhswj00hjvjpc1f897kl0zcesu5'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dhswj00hjvjpc1f897kl0zcesu5].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dhswj00hjvjpc1f897kl0zcesu5].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dhswj00hjvjpc1f897kl0zcesu5].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dhswj00hjvjpc1f897kl0zcesu5].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dhswj00hjvjpc1f897kl0zcesu5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dhswj00hjvjpc1f897kl0zcesu5].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dhswj00hjvjpc1f897kl0zcesu5].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dhswj00hjvjpc1f897kl0zcesu5].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dhswj00hjvjpc1f897kl0zcesu5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dhswj00hjvjpc1f897kl0zcesu5].[:Measure Names]' value='116' />
            <format attr='height' value='37' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='text-format' field='[federated.1dhswj00hjvjpc1f897kl0zcesu5].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ddebf0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#c0c0c0' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1dhswj00hjvjpc1f897kl0zcesu5].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1dhswj00hjvjpc1f897kl0zcesu5].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7CF6AC02-E173-4E87-8CFB-D896662AFDD6}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Continent Wise Death Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauBook2)' name='federated.0iyag7x0w0umyy16myqzs16e3h7w' />
          </datasources>
          <datasource-dependencies datasource='federated.0iyag7x0w0umyy16myqzs16e3h7w'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iyag7x0w0umyy16myqzs16e3h7w].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iyag7x0w0umyy16myqzs16e3h7w].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iyag7x0w0umyy16myqzs16e3h7w].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0iyag7x0w0umyy16myqzs16e3h7w].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0iyag7x0w0umyy16myqzs16e3h7w].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='224' />
                <format attr='size' value='1.1094474792480469' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iyag7x0w0umyy16myqzs16e3h7w].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0iyag7x0w0umyy16myqzs16e3h7w].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{6F754CBF-F16F-4943-AFCD-12B53F3701A4}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Covid Infection Rate Country Wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauBook3)' name='federated.1oy1wlq1wraut715wvlnx1x4m2c6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1oy1wlq1wraut715wvlnx1x4m2c6'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[Action (Location)]'>
            <groupfilter function='level-members' level='[Location]' user:ui-action-filter='[Action1_609A851F2C7045AEA2E5FAA1BA15E779]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[none:Location:nk]'>
            <groupfilter function='level-members' level='[none:Location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[sum:PercentPopulationInfected:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>21.9654231119199</max>
          </filter>
          <slices>
            <column>[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[none:Location:nk]</column>
            <column>[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[sum:PercentPopulationInfected:qk]</column>
            <column>[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[Longitude (generated)]' field-type='quantitative' max='21153958.227291673' min='-21770461.940572035' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[Latitude (generated)]' field-type='quantitative' max='12406358.003259122' min='-6877756.8321591914' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[none:Location:nk]' />
              <color column='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[Latitude (generated)]</rows>
        <cols>[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6045FF08-951D-4262-B517-9CBF97310B8A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauBook4)' name='federated.0jp32gj10eviy71awdwjq01xdsk3' />
          </datasources>
          <datasource-dependencies datasource='federated.0jp32gj10eviy71awdwjq01xdsk3'>
            <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[HighestInfectionCount]' derivation='Sum' forecast-column-base='[sum:HighestInfectionCount:qk]' forecast-column-type='forecast-value' name='[fVal:sum:HighestInfectionCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[HighestInfectionCount]' derivation='Sum' name='[sum:HighestInfectionCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]' included-values='in-range'>
            <min>#2020-02-12 00:00:00#</min>
            <max>#2021-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]</column>
            <column>[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]' />
              <text column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]' />
              <lod column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[fVal:sum:HighestInfectionCount:qk]' />
              <color column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1111' />
                <format attr='maxwidth' value='1111' />
                <format attr='minheight' value='718' />
                <format attr='maxheight' value='718' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1111' />
                <format attr='maxwidth' value='1111' />
                <format attr='minheight' value='718' />
                <format attr='maxheight' value='718' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1111' />
                <format attr='maxwidth' value='1111' />
                <format attr='minheight' value='718' />
                <format attr='maxheight' value='718' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jp32gj10eviy71awdwjq01xdsk3].[fVal:sum:HighestInfectionCount:qk]</rows>
        <cols>[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{DFFEF21D-AF67-4DEB-A221-235831FC5DD4}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauBook4)' name='federated.0jp32gj10eviy71awdwjq01xdsk3' />
          </datasources>
          <datasource-dependencies datasource='federated.0jp32gj10eviy71awdwjq01xdsk3'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[Action (Location,MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_609A851F2C7045AEA2E5FAA1BA15E779]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]'>
            <groupfilter function='level-members' level='[none:Location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]' included-values='in-range-or-null'>
            <min>#2020-01-01 00:00:00#</min>
            <max>#2021-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]</column>
            <column>[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]</column>
            <column>[federated.0jp32gj10eviy71awdwjq01xdsk3].[Action (Location,MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]' />
              <text column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[avg:PercentPopulationInfected:qk]' />
              <text column='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jp32gj10eviy71awdwjq01xdsk3].[avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{B3B7345F-FC99-452D-BB3A-5672097477C0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet1 (TableauBook2)' name='federated.0iyag7x0w0umyy16myqzs16e3h7w' />
        <datasource caption='Sheet1 (TableauBook4)' name='federated.0jp32gj10eviy71awdwjq01xdsk3' />
        <datasource caption='Sheet1 (TableauBook1)' name='federated.1dhswj00hjvjpc1f897kl0zcesu5' />
        <datasource caption='Sheet1 (TableauBook3)' name='federated.1oy1wlq1wraut715wvlnx1x4m2c6' />
      </datasources>
      <datasource-dependencies datasource='federated.0iyag7x0w0umyy16myqzs16e3h7w'>
        <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0jp32gj10eviy71awdwjq01xdsk3'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1dhswj00hjvjpc1f897kl0zcesu5' />
      <datasource-dependencies datasource='federated.1oy1wlq1wraut715wvlnx1x4m2c6'>
        <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
        <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='33296' id='3' name='Sheet 1' w='33294' x='878' y='1770' />
        <zone h='13385' id='4' name='Sheet 1' param='[federated.1dhswj00hjvjpc1f897kl0zcesu5].[:Measure Names]' type-v2='filter' w='9362' x='34348' y='1549' />
        <zone h='33296' id='5' name='Sheet 2' w='33294' x='1580' y='19358' />
        <zone h='17367' id='6' name='Sheet 2' param='[federated.0iyag7x0w0umyy16myqzs16e3h7w].[none:location:nk]' type-v2='filter' w='9362' x='36044' y='30310' />
        <zone h='40708' id='10' name='Sheet 4' w='42774' x='54125' y='4535' />
        <zone h='6748' id='13' name='Sheet 4' param='[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]' type-v2='filter' values='database' w='9362' x='43534' y='23341' />
        <zone h='45022' id='14' name='Sheet 3' w='47338' x='5325' y='53319' />
        <zone h='8407' id='16' name='Sheet 3' pane-specification-id='4' param='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[sum:PercentPopulationInfected:qk]' type-v2='color' w='8192' x='44119' y='47124' />
        <zone h='39602' id='17' name='Sheet 5' w='44763' x='53482' y='57743' />
        <zone h='6748' id='18' name='Sheet 5' param='[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]' type-v2='filter' values='database' w='9362' x='43827' y='31084' />
        <zone h='6527' id='19' name='Sheet 3' param='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[sum:PercentPopulationInfected:qk]' type-v2='filter' values='database' w='9011' x='44061' y='39159' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='44' param='vert' type-v2='layout-flow' w='99064' x='468' y='885'>
                <zone h='13385' id='4' mode='checkdropdown' name='Sheet 1' param='[federated.1dhswj00hjvjpc1f897kl0zcesu5].[:Measure Names]' type-v2='filter' w='9362' x='34348' y='1549'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='33296' id='3' is-fixed='true' name='Sheet 1' w='33294' x='878' y='1770'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6748' id='13' name='Sheet 4' param='[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]' type-v2='filter' values='database' w='9362' x='43534' y='23341'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40708' id='10' is-fixed='true' name='Sheet 4' w='42774' x='54125' y='4535'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17367' id='6' mode='checkdropdown' name='Sheet 2' param='[federated.0iyag7x0w0umyy16myqzs16e3h7w].[none:location:nk]' type-v2='filter' w='9362' x='36044' y='30310'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33296' id='5' is-fixed='true' name='Sheet 2' w='33294' x='1580' y='19358'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6527' id='19' name='Sheet 3' param='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[sum:PercentPopulationInfected:qk]' type-v2='filter' values='database' w='9011' x='44061' y='39159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45022' id='14' is-fixed='true' name='Sheet 3' w='47338' x='5325' y='53319'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8407' id='16' name='Sheet 3' pane-specification-id='4' param='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[sum:PercentPopulationInfected:qk]' type-v2='color' w='8192' x='44119' y='47124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6748' id='18' name='Sheet 5' param='[federated.0jp32gj10eviy71awdwjq01xdsk3].[tmn:date:qk]' type-v2='filter' values='database' w='9362' x='43827' y='31084'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39602' id='17' is-fixed='true' name='Sheet 5' w='44763' x='53482' y='57743'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1AF53B03-145D-40A2-B419-8AD8B2800DFB}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dhswj00hjvjpc1f897kl0zcesu5].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DFB8FD94-A116-4816-8580-FA2362EEDF02}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0iyag7x0w0umyy16myqzs16e3h7w].[none:location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iyag7x0w0umyy16myqzs16e3h7w].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{463B4C7F-9C6D-47D6-AB90-93E03EDB4477}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oy1wlq1wraut715wvlnx1x4m2c6].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{37C434E4-8348-4BA6-ADA1-309A190F651F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]&#10;[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Forecast Indicator:nk]</field>
            <field>[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56EDCF5E-9693-4CD4-B7D3-25CF59569553}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]&#10;[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Forecast Indicator:nk]</field>
            <field>[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DFD8C2E5-4373-4990-B65B-0CE999960091}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Location:nk]&#10;[federated.0jp32gj10eviy71awdwjq01xdsk3].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{08559250-F19A-42CE-9A81-358F3BEA5E24}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='61' name='Sheet 1' width='192'>
      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
      oBEFICJo/h8S8dwtwgArfQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      MqTyiXsusykAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
